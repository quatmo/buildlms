#!/bin/bash
# wget -O - https://raw.githubusercontent.com/quatmo/runesq/main/mompd | sh
# Specify the path to the file
file_path="/volumio/app/plugins/music_service/mpd/index.js"

# Use awk to replace the old line with the new lines
awk '/return this.sendMpdCommand\('"'"'update'"'"', \[\]\);/ { print "    //return this.sendMpdCommand(\x27update\x27, \x27\x27);"; print "    return this.sendMpdCommand(\x27update\x27, ['USB']);"; print "    return this.sendMpdCommand(\x27update\x27, ['NAS']);"; next } 1' "$file_path" > temp_file && mv temp_file "$file_path"


# Use sed to replace the old block of code with the new lines for updateDb
sed -i '/ControllerMpd.prototype.updateDb = function (data) {/,/};/c\
ControllerMpd.prototype.updateDb = function(data) {\
    var self = this;\
    var pos = \x27\x27;\
    var message = self.commandRouter.getI18nString(\x27COMMON.SCAN_DB\x27);\
    this.sendMpdCommand(\x27update\x27, \x27USB\x27);\
    this.sendMpdCommand(\x27update\x27, \x27NAS\x27);\
    // if (data != undefined) {\
    //     pos = data.replace(\x27music-library/\x27, \x27\x27);\
    //     message = pos + \x27: \x27 + message;\
    // }\
    // self.commandRouter.pushToastMessage(\x27success\x27, self.commandRouter.getI18nString(\x27COMMON.MY_MUSIC\x27), message);\
    // return self.sendMpdCommand(\x27update\x27, [pos]);\
};' "$file_path"

# Use sed to replace the old block of code with the new lines for rescanDb
sed -i '/ControllerMpd.prototype.rescanDb = function () {/,/};/c\
ControllerMpd.prototype.rescanDb = function () {\
    var self = this;\
    var pos = \x27\x27;\
    var message = self.commandRouter.getI18nString(\x27COMMON.SCAN_DB\x27);\
    this.sendMpdCommand(\x27update\x27, \x27USB\x27);\
    //self.commandRouter.pushToastMessage(\x27success\x27, //self.commandRouter.getI18nString(\x27COMMON.MY_MUSIC\x27), //self.commandRouter.getI18nString(\x27COMMON.RESCAN_DB\x27));\
    //return self.sendMpdCommand(\x27rescan\x27, []);\
};' "$file_path"


# Replace the old line with the new lines
old_line="execSync('/usr/bin/mpc rescan', { uid: 1000, gid: 1000});"
new_lines="//execSync('/usr/bin/mpc rescan', { uid: 1000, gid: 1000});"
new_lines+="\nreturn this.sendMpdCommand('update', ['USB']);"
new_lines+="\nreturn this.sendMpdCommand('update', ['NAS']);"
sed -i "s|$old_line|$new_lines|g" "$file_path"


old_line1="self.checkUSBDrives();"
new_lines1="//self.checkUSBDrives();"
sed -i "s|$old_line1|$new_lines1|g" "$file_path"
